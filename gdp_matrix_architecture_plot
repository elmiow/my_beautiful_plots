### GDP PLOT and MATRIX ARCHITECTURE PLOT for use with data from the RCPs and the SSPs (cf. Riahi et al. 2017)

##libraries 
############################################################## general options #########################################
#get rid of scientific numbering
options(scipen = 999)
############################################################## general libraries #########################################

##libraries

library(ggplot2)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(stringr)
library(psych)
library(readr)
library(data.table)
library(rmutil)
library(reshape2)
library(stringi)
library(dplyr)
library(ggpubr)
library(devtools)
library(ggedit)
library(ggforce)
library(colorspace)
library(mcp)
library(ggpmisc)
library(rlist)
library(erer)
library(hrbrthemes)
library(plyr)

########################################################################################################################
##set paths (not every detail shown here)
##directories have been created in separate script

##remote in-path
#in_presentations_path <- "D:/ARTICLE II/Calculation/Result_from_Cluster/out/"
##cluster path
#cluster_path <- "P:/GCM_atmosphere_biascorr_land/"

########################################################################################################################

##define axis labels for both plots
x_tick_lbs <- paste(c("SSP1", "SSP2", "SSP3", "SSP4", "SSP5"), unique(fill_df$Title), sep="\n")
y_tick_lbs <- c("RCP 2.6", "RCP 4.5", "RCP 6.0", "RCP 8.5")

########################################################################################################################

##setup plot no. 1: GDP plot

gdp_ssp_plot <- ggplot(mean_SoEc_ssp_df_yr2100)+geom_col(aes(ssp_no, ssp_uniq_ctrymean_IIASA_OECD), width = 0.99) +
  theme_bw() +
  xlab(x_lbs) +  
  ylab("GDP/capita\n[2011 int. $]") +  
  #ggtitle("Mean GDP/cap across involved countries") +
  coord_cartesian(ylim=c(0, 100000), expand = F) +   #2.1,9
  #scale_x_continuous(breaks=c(1:5), labels = x_tick_lbs) +  ##labels = c("SSP1", "SSP2", "SSP3", "SSP4", "SSP5")) +  
  #scale_y_continuous(breaks=c(2.6, 4.5, 6.0, 8.5) , labels = y_tick_lbs) + 
  theme(
    axis.title.x = element_blank(), #element_text(vjust=-0.75, size =16), 
    axis.title.y = element_text(vjust=0.9, size =18),
    axis.text.x = element_blank(), #= element_text(size =14),
    axis.text.y  = element_text(size =16),
    axis.ticks = element_line(size = 0.4),  #+scale_x_continuous(breaks=seq(10,35,5)) + theme(axis.ticks.y = element_blank()) + theme(axis.text.y  = element_blank())
    axis.line = element_line(colour = "black"),
    panel.border = element_blank(),  ## neu
    #axis.ticks.length = unit(0.08, "cm"),
    axis.ticks.x = element_blank(), 
    #axis.ticks.y = element_blank(), 
    panel.grid.major = element_blank(),  #element_line(color = "gray80", size = 0.1),
    panel.grid.minor = element_blank(),  #element_line(color = "gray85", size = 0.1),
    panel.spacing = unit(0, "lines"),
    plot.margin = unit(c(0.6, 0.3, 0.2, 0.1), "cm"), #c(top, right, bottom, left) #unit(c(0.15, 0.25, 0, 0)
    legend.box = "vertical",
    #legend.margin = unit(c(1,1,1,1), "cm"),
    legend.title = element_text(colour="black", size=16, face="bold"), 
    legend.text = element_text(colour="black", size =16),
    legend.key = element_blank(),
    legend.key.width=unit(1.5,"line"),
    legend.key.height=unit(1.1,"line"),   #0.5
    legend.position="bottom", legend.spacing=unit(0.4, "cm"),     ## hjust, vjust only between 0 (left) and 1 (right)!
    #legend.justification="center",
    plot.title=element_text(size=17, vjust=1))+
  geom_hline(yintercept = gdp_2000_mean_val_unqctrybased, color="lawngreen", linetype="dashed") + scale_size_manual(values =c(4) ) +
  annotate("text", x=1.2, y=gdp_2000_mean_val_unqctrybased+6000, color="lawngreen", label="Country-based GDP/capita 2000 across the cities", size=4.6)
gdp_ssp_plot

########################################################################################################################

##definitions for setup of plot no. 2: SCENARIO MATRIX ARCHITECTURE PLOT 

##define position values 
##x values
x1 <- 1
x2 <- 2
x3 <- 3
x4 <- 4
x5 <- 5

##x and y values for table grobs

xtg1.l <- 0.5
xtg1.r <- 1.5
xtg2.l <- 1.5
xtg2.r <- 2.5
xtg3.l <- 2.5
xtg3.r <- 3.5
xtg4.l <- 3.5
xtg4.r <- 4.5
xtg5.l <- 4.5
xtg5.r <- 5.5

ytg2.6t <- 2.8
ytg2.6b <- 2.6
ytg4.5t <- 4.7
ytg4.5b <- 4.5
ytg6.0t <- 6.2
ytg6.0b <- 6.0
ytg8.5t <- 8.7
ytg8.5b <- 8.5

## y values

y2.6.1 <- 3.2
y2.6.abs  <- 3.0
y2.6.2 <- 2.8
y2.6.3 <- 2.5
y2.6.4 <- 2.3

y4.5.1 <- 5.1
y4.5.abs <- 4.9
y4.5.2 <- 4.7
y4.5.3 <- 4.4
y4.5.4 <- 4.2

y6.0.1 <- 6.6
y6.0.abs <- 6.4
y6.0.2 <- 6.2
y6.0.3 <- 5.9
y6.0.4 <- 5.7

y8.5.1 <- 8.9
y8.5.abs <- 8.7
y8.5.2 <- 8.5
y8.5.3 <- 8.2
y8.5.4 <- 8.0

smaj <- 3
smin <- 2.5 

###########################################################

##define specifications for exposure type: EXD or MAG as backround fill data
##fill mode and details

fill_mode_vec <- c("fill_df", "mag_df")
fill_mode_caption <- c("mag_guide_ttl" , "mag_guide_ttl")

##loop to produce both exposure figures at the same time
for(fm in 1:length(fill_mode_vec)){
  
  ##determine whether exd or mag is background color, in-text or annex figure
  cellcolor <- fill_mode_vec[fm]
  fill_mode_caption_text <- get(fill_mode_caption[fm])
  ###########################################################

  ##get system date to control plot version name
  today_date <- as.character(gsub("-", "", (Sys.Date())))
  print(today_date) ## check date

  ##create plot name depending on fill mode 
  if(identical(get(cellcolor), fill_df)){matrixplot_name <- paste0("Figure_scenario_matrix_EXD_DAYS_", today_date, "_DECADE.pdf")}
  if(identical(get(cellcolor), mag_df)){matrixplot_name <- paste0("Supplementary_Figure_Scenario_matrix_DeltaMAG_DECADE.pdf")}
  matrixplot_name ## check plot name 

  ###########################################################
  
  ##setup plot no. 2: SCENARIO MATRIX ARCHITECTURE PLOT 
  
  matrix_ssp_rcp_plot_decade <- ggplot(get(cellcolor), aes(SSPs, RCPs, fill=factor(idx.hist_2099_ENSMEANs)), color="grey50") +
    #geom_col(data=mean_SoEc_ssp_df_yr2100, aes(ssp_no, ssp_uniq_ctrymean_IIASA_OECD/100000), color="grey50") +
    geom_tile(aes(SSPs, RCPs, fill=factor(idx.hist_2099_ENSMEANs)), color="grey50") +
    ##rcp2.6
    annotation_custom(get(list_annotn[[1]]), xmin = xtg1.l, xmax = xtg1.r, ymin = ytg2.6b, ymax = ytg2.6t) +
    annotation_custom(get(list_annotn[[2]]), xmin = xtg2.l, xmax = xtg2.r, ymin = ytg2.6b, ymax = ytg2.6t) +
    annotation_custom(get(list_annotn[[4]]), xmin = xtg4.l, xmax = xtg4.r, ymin = ytg2.6b, ymax = ytg2.6t) +
    annotation_custom(get(list_annotn[[5]]), xmin = xtg5.l, xmax = xtg5.r, ymin = ytg2.6b, ymax = ytg2.6t) +
    ##rcp4.5
    annotation_custom(get(list_annotn[[6]]), xmin = xtg1.l, xmax = xtg1.r, ymin = ytg4.5b, ymax = ytg4.5t) +
    annotation_custom(get(list_annotn[[7]]), xmin = xtg2.l, xmax = xtg2.r, ymin = ytg4.5b, ymax = ytg4.5t) +
    annotation_custom(get(list_annotn[[8]]), xmin = xtg3.l, xmax = xtg3.r, ymin = ytg4.5b, ymax = ytg4.5t) +
    annotation_custom(get(list_annotn[[9]]), xmin = xtg4.l, xmax = xtg4.r, ymin = ytg4.5b, ymax = ytg4.5t) +
    annotation_custom(get(list_annotn[[10]]), xmin = xtg5.l, xmax = xtg5.r, ymin = ytg4.5b, ymax = ytg4.5t) +
    ##rcp6.0
    annotation_custom(get(list_annotn[[11]]), xmin = xtg1.l, xmax = xtg1.r, ymin = ytg6.0b, ymax = ytg6.0t) +
    annotation_custom(get(list_annotn[[12]]), xmin = xtg2.l, xmax = xtg2.r, ymin = ytg6.0b, ymax = ytg6.0t) +
    annotation_custom(get(list_annotn[[13]]), xmin = xtg3.l, xmax = xtg3.r, ymin = ytg6.0b, ymax = ytg6.0t) +
    annotation_custom(get(list_annotn[[14]]), xmin = xtg4.l, xmax = xtg4.r, ymin = ytg6.0b, ymax = ytg6.0t) +
    annotation_custom(get(list_annotn[[15]]), xmin = xtg5.l, xmax = xtg5.r, ymin = ytg6.0b, ymax = ytg6.0t) +
    ##rcp8.5
    annotation_custom(get(list_annotn[[20]]), xmin = xtg5.l, xmax = xtg5.r, ymin = ytg8.5b, ymax = ytg8.5t) +
    geom_segment(aes(x = 0.5, y = 7.75, xend = 1.5, yend = 9), size = 1.25, color="grey50") +
    geom_segment(aes(x = 1.5, y = 7.75, xend = 2.5, yend = 9), size = 1.25, color="grey50") +
    geom_segment(aes(x = 2.5, y = 7.75, xend = 3.5, yend = 9), size = 1.25, color="grey50") +
    geom_segment(aes(x = 3.5, y = 7.75, xend = 4.5, yend = 9), size = 1.25, color="grey50") +
    geom_segment(aes(x = 2.3, y = 1.85, xend = 3.5, yend = 3.35), size = 1.25, color="grey50") +
    geom_segment(aes(x = 4.3, y = 1.85, xend = 5.5, yend = 3.35), size = 1.15, color="grey50",linetype="dotted") +
    geom_segment(aes(x = 4.5, y = 3.35, xend = 5.5, yend = 2.08), size = 1.15, color="grey50",linetype="dotted") +
    geom_segment(aes(x = 0.5, y = 9, xend = 1.5, yend = 7.75), size = 1.25, color="grey50") +
    geom_segment(aes(x = 1.5, y = 9, xend = 2.5, yend = 7.75), size = 1.25, color="grey50") +
    geom_segment(aes(x = 2.5, y = 9, xend = 3.5, yend = 7.75), size = 1.25, color="grey50") +
    geom_segment(aes(x = 3.5, y = 9, xend = 4.5, yend = 7.75), size = 1.25, color="grey50") +
    geom_segment(aes(x = 2.5, y = 3.35, xend = 3.5, yend = 2.08), size = 1.25, color="grey50") +
    theme_bw() +
    xlab(x_lbs) +  
    ylab(y_lbs) +  
    coord_cartesian(ylim=c(2.1, 9.1), expand = F) +   #2.1,9
    scale_x_continuous(breaks=c(1:5), labels = x_tick_lbs) +  ##labels = c("SSP1", "SSP2", "SSP3", "SSP4", "SSP5")) +  
    scale_y_continuous(breaks=c(2.6, 4.5, 6.0, 8.5)) +  
    #scale_y_continuous(sec.axis = sec_axis(~.*100000, name = "response2")) +
    scale_fill_manual(values=fill_col_codes) +
    theme(
      plot.caption = element_text(hjust = 0.5, size =16),
      axis.title.x = element_text(vjust=-0.75, size =18), 
      axis.title.y = element_text(vjust=0.9, size =18),
      axis.text.x  = element_text(size =18),
      axis.text.y  = element_text(size =18),
      axis.ticks = element_line(size = 0.4), 
      axis.ticks.x = element_blank(), 
      axis.ticks.y = element_blank(),
      panel.grid.major = element_blank(),  #element_line(color = "gray80", size = 0.1),
      panel.grid.minor = element_blank(),  #element_line(color = "gray85", size = 0.1),
      panel.spacing = unit(0, "lines"),
      plot.margin = unit(c(0.6, 0.3, 0.2, 0.1), "cm"), #c(top, right, bottom, left) #unit(c(0.15, 0.25, 0, 0)
      legend.box = "vertical",
      #legend.margin = unit(c(1,1,1,1), "cm"),
      legend.title = element_text(colour="black", size=16, face="bold"), 
      legend.text = element_text(colour="black", size =16),
      legend.key = element_blank(),
      legend.key.width=unit(1.5,"line"),
      legend.key.height=unit(1.1,"line"),  
      legend.position="bottom", legend.spacing=unit(0.4, "cm"),     ## hjust, vjust only between 0 (left) and 1 (right)!
      plot.title=element_text(size=17, vjust=1, face = "bold")) + 
    guides(color=FALSE, fill=guide_legend(order = 1, title.position = "top", ncol = 10, title.hjust=0.5)) +
    labs(fill=fill_mode_caption_text, caption = ttl)  
matrix_ssp_rcp_plot_decade

########################################################################################################################

##arrange plots no. 1 and no.2 into a two-panel plot

scen_mtrx_gdp_plot_decade <- ggarrange(gdp_ssp_plot, matrix_ssp_rcp_plot_decade,
                                 labels = c("A", "B"),
                                 ncol = 1, nrow = 2, 
                                 heights = c(1,5), 
                                 align = "v")


##save arranged joint plot

dev.off()
##save on cluster 
ggsave(filename = paste0(cluster_path,"out_presentations/", matrixplot_name), scen_mtrx_gdp_plot_decade , width = 16, height = 10)

##LOCAL COVID HOMEOFFICE PATH for REMOTE USE
ggsave(filename = paste0(review_figure_path, matrixplot_name), scen_mtrx_gdp_plot_decade , width = 16, height = 10)
dev.off()

print(fm) ## control fill mode
}## end for fm

### END GDP PLOT
### END MATRIX PLOT


